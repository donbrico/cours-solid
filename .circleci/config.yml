version: 2.1

jobs:
  build:
    docker:
      - image: circleci/php:7.4-cli
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: symfony_test
          MYSQL_USER: root
          MYSQL_PASSWORD: ''

      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: ''

    steps:
      - checkout

      - run:
          name: Update and install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y git unzip libpng-dev libjpeg-dev libfreetype6-dev

      - run:
          name: Install Composer
          command: |
            curl -sS https://getcomposer.org/installer | php
            sudo mv composer.phar /usr/local/bin/composer

      - run:
          name: Install PHP Extensions
          command: |
            sudo docker-php-ext-configure gd --with-freetype --with-jpeg
            sudo docker-php-ext-install gd pdo pdo_mysql

      - run:
          name: Install Symfony CLI
          command: |
            wget https://get.symfony.com/cli/installer -O - | bash
            mv ~/.symfony*/bin/symfony /usr/local/bin/symfony

      - run:
          name: Install project dependencies
          command: composer install --no-interaction --prefer-dist --optimize-autoloader

      - run:
          name: Create .env.local
          command: |
            cp .env .env.local
            echo "DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}/${MYSQL_DATABASE}" >> .env.local

      - run:
          name: Set up the database
          command: |
            php bin/console doctrine:database:create --env=test
            php bin/console doctrine:schema:create --env=test

      - run:
          name: Run tests
          command: ./vendor/bin/phpunit



  deploy:
    docker:
      - image: 'phpdockerio/php:8.2-fpm'
    steps:
      - checkout
      - run:
          name: Deploy Main to Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
